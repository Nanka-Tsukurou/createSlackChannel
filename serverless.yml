service: createslackchannel

provider:
  name: aws
  runtime: python3.7
#  stage: dev  #for test
  stage: prod
  region: ap-northeast-1
  deploymentBucket: ${file(./myCustomFile.yml):deployment_bucket}
  logRetentionInDays: 7
  timeout: 60
  memorySize: 128
  environment:
    TZ: Asia/Tokyo
    SLACK_API_TOKEN: ${file(./myCustomFile.yml):slack_token}
#    POST_CHANNEL: ${file(./myCustomFile.yml):post_channel_dev}  # for test
    POST_CHANNEL: ${file(./myCustomFile.yml):post_channel_prod}
#    EXEC_USER_ID: ${file(./myCustomFile.yml):exec_user_id_dev}  # for test
    EXEC_USER_ID: ${file(./myCustomFile.yml):exec_user_id_prod}

package:
  exclude:
    - dist/**
    - myCustomFile.yml
    - node_modules/**

plugins:
  - serverless-prune-plugin
  - serverless-plugin-aws-alerts
  - serverless-python-requirements

functions:
  main:
    handler: src/main.handler
    timeout: 30
    events:
      - schedule:
#         rate: cron(50 * * * ? *) #for test
          rate: cron(00 2 1 * ? *)
      - http:
          path: createAndArchive
          method: post
          async: true
          response:
            headers:
              Content-Type: "'application/json'"

custom: ${file(./myCustomFile.yml)}